# TODO: Modify this image for ARM
Bootstrap: docker
From: arm64v8/ubuntu:22.04

%post
    ## Actualizar el sistema e instalar las dependencias necesarias
    apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates \
        cmake \
        gawk \
        git \
        g++ \
        make \
        python3 \
        python3-dev \
        python3-pip \
        && apt-get clean && rm -rf /var/lib/apt/lists/*

    ## Configurar entorno de compilaci√≥n
    update-alternatives --install /usr/bin/python python /usr/bin/python3 10
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10

    ## Clonar el repositorio y preparar las dependencias de Python
    git clone -b ipc-2018-seq-opt https://bitbucket.org/ipc2018-classical/team23.git /planner
    cd /planner
    pip install -r requirements.txt

    ## Construir el planificador
    cd /planner
    ./build.py release64 -j4
    cd /planner/symba
    ./build -j4

    ## Limpiar y reorganizar archivos
    mkdir -p /compiled-planner/builds/release64
    mv /planner/driver /compiled-planner
    mv /planner/symba /planner/symba.py /compiled-planner
    mv /planner/fast-downward.py /planner/plan-ipc.py /planner/create-image-from-graph.py /planner/timers.py /compiled-planner
    mv /planner/dl_model /compiled-planner
    rm -rf /compiled-planner/dl_model/model_creation /compiled-planner/dl_model/model.h5 /compiled-planner/dl_model/model.json
    mv /planner/builds/release64/bin /compiled-planner/builds/release64
    mkdir -p /compiled-planner/src
    mv /planner/src/translate/ /compiled-planner/src/
    rm -rf /third-party
    rm -rf /planner
    mv /compiled-planner /planner
    apt-get -y autoremove cmake g++ make

%runscript
    ## El runscript se llama siempre que se utiliza el contenedor para resolver una instancia.

    DOMAINFILE=$1
    PROBLEMFILE=$2
    PLANFILE=$3

    ## Llamar al planificador.
    /planner/plan-ipc.py \
        $DOMAINFILE \
        $PROBLEMFILE \
        $PLANFILE \
        --image-from-lifted-task

%labels
Name        Delfi1
Description This planner uses an offline learned algorithm selector to choose the "best" planner online based on an abstract structure graph of the PDDL description of the planning task. In particular, the learning algorithm uses such graphs of a planning task, turns them into an image, and uses the planner runtime to train a neural net. The learned model thus predicts runtime of planners on a given task and chooses a planner accordingly.
Authors     Michael Katz <michael.katz1@ibm.com>, Shirin Sohrabi <ssohrab@us.ibm.com>, Horst Samulowitz <samulowitz@us.ibm.com>, and Silvan Sievers <silvan.sievers@unibas.ch>
SupportsDerivedPredicates no
SupportsQuantifiedPreconditions no
SupportsQuantifiedEffects no
